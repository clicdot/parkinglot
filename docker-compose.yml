## Docker Compose requires an .env file
## .env for security reasons is not part of the repo
## .env will be dynamically created on CI/CD process
# dFile='Dockerfile'
# appName='someapp'
# PORT_MAPPED=5000
# PORT_TARGET=5001
# ENV=DEV|UAT|PROD
# REDIS_PORT=6379
#

services:
  db:
    container_name: ${appName}_db
    image: mysql
    ports:
      - 3306:3306
    environment:
      MMYSQL_DATABASE: myDb
      MYSQL_USER: mysql
      MYSQL_PASSWORD: root
      MYSQL_ROOT_PASSWORD: root
    volumes:
      - ./docker/mysql/dump:/docker-entrypoint-initdb.d
      - ./docker/mysql/persistent:/var/lib/mysql
    restart: always
    networks:
      - default

  cache:
    container_name: ${appName}_redis
    image: redis:alpine
    command: redis-server /usr/local/etc/redis/redis.conf
    volumes:
      - ./docker/redis/redis.conf:/usr/local/etc/redis/redis.conf
    networks:
      - default
    ports:
      - 6379:6379

  api:
    container_name: ${appName}_api
    build:
      context: .
      dockerfile: ./docker/${dFile}
    volumes:
      - "./src:/app/src"
    ports:
      - "${PORT_MAPPED}:${PORT_TARGET}"
    environment:
      PORT_MAPPED: ${PORT_MAPPED}
      PORT_TARGET: ${PORT_TARGET}
      SWAGGER_TITLE: "SWAGGER"
      SWAGGER_DESCR: "Swagger Demo"
      SWAGGER_VS: "1.0.0"
      MYSQLHOST: db
      MYSQLUSER: root
      MYSQLPASS: root
      MYSQLDB: ${DB}
      REDISHOST: cache
      REDISPORT: 6379
      MODE: ${NODE_ENV}
      RUN_MIGRATIONS: "true"
      ENV: ${ENV}
    depends_on:
      - cache
    links:
      - cache
    networks:
      - default
networks:
  default:
    name: ${appName}_orchestrator
    driver: bridge
version: '3.5'
